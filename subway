#!/usr/bin/ruby
require 'csv'
require 'pp'

class String
  def color(c)
    colors = {
      :black   => 30,
      :red     => 31,
      :green   => 32,
      :yellow  => 33,
      :blue    => 34,
      :magenta => 35,
      :cyan    => 36,
      :white   => 37,
      :orange  => 91
    }
    return "\e[#{colors[c] || c}m#{self}\e[0m"
    end
end

def getStopsIdsByName (stopName)
  CSV.foreach("stops.txt") do |row|
    if (row[2].downcase.match(/#{stopName.downcase}/)) then
      return "#{row[0]}"
    end
  end
end

def generateStopsFile (userStops, filename)
  puts "Generating..."
  pp userStops
  CSV.open(filename, "wb") do |csv|
    csv << ["stop_id", "day", "time"]
    i = 0
    CSV.foreach("stop_times.txt") do |row|
      userStops.each do |stop|
        if (stop[0] == row[3]) then
          day = row[0].match(/^[ABRS]\d+(WKD|SAT|SUN)/)[1]
          hours,minutes,seconds = row[1].split(':')
          seconds = seconds.to_i + (hours.to_i * 3600) + (minutes.to_i * 60)
        csv << [row[3], stop[1], day, seconds]
        end
      end
    end
  end
end

def getStopTimes (stopID, stops)
  case Time.now.wday
	  when 0 then day = "SUN"
	  when 6 then day = "SAT"
	  else        day = "WKD"
  end

  time = (Time.now.hour * 3600) + (Time.now.min * 60) + Time.now.sec
  counter = 0

  stops.each do |row|
    if (row[0] == stopID && row[2] == day) then
      if (row[3].to_i > time) then
        hours = row[3].to_i / 3600
        minutes = (row[3].to_i - (hours * 3600)) / 60
        seconds = (row[3].to_i - (hours * 3600) - (minutes * 60))
        subwayColor = ""
        case row[0][0].chr
        when "B", "D", "F", "M"
          subwayColor = 101
        when "1", "2", "3"
          subwayColor = 41
        when "4", "5", "6"
          subwayColor = 42
        when "G"
          subwayColor = 102
        when "N", "Q", "R"
          subwayColor = 43
        when "A", "C", "E"
          subwayColor = 44
        when "J", "Z"
          subwayColor = 100
        when "7"
          subwayColor = 45
        end
        if (row[0][-1,1] == "N")
          direction = "Northbound ".color(40).color(:white)
        else
          direction = "Southbound ".color(40).color(:white)
        end
        print "#{direction}"
        print " #{row[0][0].chr} ".color(subwayColor).color(:white)
        puts " arriving at #{row[1]} at #{hours}:#{minutes}:#{seconds}"
        counter += 1
        if (counter == 3) then
          return true
        end
      end
    end
  end
end

def loadStopsFile (filename)
  stops =  CSV.read(filename)
  return stops
end

def promptStops
  allstops = []
  CSV.foreach("stops.txt") do |row|
    allstops.push([row[0],row[2]])
  end
  userchoices = []
  loop do
    print "Enter the name of your stop (or 'done' when finished): "
    stopname = gets.chomp!
    if (stopname == "done") then
      return userchoices
    end
    useroptions = []
    allstops.each do |row|
      if (row[0].match(/.+[NS]/) && row[1].downcase.match(/#{stopname.downcase}/)) then
        puts "[#{useroptions.length.to_s.color(:blue)}] #{row[0]} #{row[1]}"
        useroptions.push(row)
      end
    end
    print "Enter your stop number(s), separated by spaces: "
    stopchoices = gets.chomp!.split(' ')
    stopchoices.each do |choice|
      userchoices.push([useroptions[choice.to_i][0],useroptions[choice.to_i][1]])
    end
  end
end

def main
  filename = "custom_stops.txt"
  if (!File.exists?(filename))
    userStops = promptStops
    generateStopsFile(userStops, filename)
  end
  stops = loadStopsFile(filename)
  getStopTimes("F18N", stops)
  getStopTimes("A40N", stops)
  #getStopsIdsByName("prospect")
  #getStopTimes("F25N")
  #generateStopsFile(["F25N","F25S"])
end

main
